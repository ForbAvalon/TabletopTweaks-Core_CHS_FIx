using Kingmaker.Blueprints.Classes;
using Kingmaker.Blueprints.Classes.Selection;
using TabletopTweaks.Core.Config;
using TabletopTweaks.Core.Extensions;
using TabletopTweaks.Core.Utilities;

namespace TabletopTweaks.Core.NewContent.ArcanistExploits {
    static class MetamagicKnowledge {
        public static void AddMetamagicKnowledge() {
            //Used Assets
            var ArcanistExploitSelection = Resources.GetBlueprint<BlueprintFeatureSelection>("b8bf3d5023f2d8c428fdf6438cecaea7");
            var ShamanHexSecretSelection = Resources.GetBlueprint<BlueprintFeatureSelection>("1342b5bfb876e434797cdcf7311bccad");

            var EmpowerSpellFeat = Resources.GetBlueprint<BlueprintFeature>("a1de1e4f92195b442adb946f0e2b9d4e");
            var ExtendSpellFeat = Resources.GetBlueprint<BlueprintFeature>("f180e72e4a9cbaa4da8be9bc958132ef");
            var HeightenSpellFeat = Resources.GetBlueprint<BlueprintFeature>("2f5d1e705c7967546b72ad8218ccf99c");
            var MaximizeSpellFeat = Resources.GetBlueprint<BlueprintFeature>("7f2b282626862e345935bbea5e66424b");
            var QuickenSpellFeat = Resources.GetBlueprint<BlueprintFeature>("ef7ece7bb5bb66a41b256976b27f424e");
            var ReachSpellFeat = Resources.GetBlueprint<BlueprintFeature>("46fad72f54a33dc4692d3b62eca7bb78");
            var PersistentSpellFeat = Resources.GetBlueprint<BlueprintFeature>("cd26b9fa3f734461a0fcedc81cafaaac");
            var SelectiveSpellFeat = Resources.GetBlueprint<BlueprintFeature>("85f3340093d144dd944fff9a9adfd2f2");
            var BolsteredSpellFeat = Resources.GetBlueprint<BlueprintFeature>("fbf5d9ce931f47f3a0c818b3f8ef8414");

            var ArcanistExploitMetamagicKnowledge = Helpers.CreateBlueprint<BlueprintFeatureSelection>("ArcanistExploitMetamagicKnowledge", bp => {
                bp.SetName("Metamagic Knowledge");
                bp.SetDescription("The arcanist can select one metamagic feat as a bonus feat. She must meet the prerequisites of this feat.");
                bp.AddFeatures(FeatTools.GetMetamagicFeats());
                bp.Mode = SelectionMode.OnlyNew;
                bp.Groups = new FeatureGroup[] { FeatureGroup.ArcanistExploit };
                bp.IsClassFeature = true;
            });
            if (ModSettings.AddedContent.ArcanistExploits.IsDisabled("MetamagicKnowledge")) { return; }
            FeatTools.AddAsArcanistExploit(ArcanistExploitMetamagicKnowledge);
        }
    }
}